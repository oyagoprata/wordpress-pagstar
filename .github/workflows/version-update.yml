name: Atualização de Versão

on:
  push:
    branches:
      - main
    paths:
      - 'pagstar-woocommerce-plugin.php'

permissions:
  contents: write
  pull-requests: write

jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configurar Git
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git config --global --add safe.directory /github/workspace

      - name: Verificar alterações na versão
        id: version
        run: |
          # Extrair versão atual do arquivo
          OLD_VERSION=$(grep "Version:" pagstar-woocommerce-plugin.php | head -n 1 | sed 's/.*Version: //' | tr -d '[:space:]')
          echo "Versão atual: $OLD_VERSION"
          
          # Extrair versão do commit anterior
          git checkout HEAD~1
          PREV_VERSION=$(grep "Version:" pagstar-woocommerce-plugin.php | head -n 1 | sed 's/.*Version: //' | tr -d '[:space:]')
          echo "Versão anterior: $PREV_VERSION"
          
          # Voltar para o commit atual
          git checkout -
          
          if [ "$OLD_VERSION" != "$PREV_VERSION" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "new_version=$OLD_VERSION" >> $GITHUB_OUTPUT
            echo "Versão alterada de $PREV_VERSION para $OLD_VERSION"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "Nenhuma alteração na versão detectada"
          fi

      - name: Atualizar CHANGELOG
        if: steps.version.outputs.changed == 'true'
        run: |
          CURRENT_DATE=$(date +"%Y-%m-%d")
          NEW_VERSION=${{ steps.version.outputs.new_version }}
          
          echo "Atualizando CHANGELOG para versão $NEW_VERSION"
          
          # Criar template para nova versão
          echo "## [$NEW_VERSION] - $CURRENT_DATE" > temp_changelog.md
          echo "" >> temp_changelog.md
          echo "### Adicionado" >> temp_changelog.md
          echo "- " >> temp_changelog.md
          echo "" >> temp_changelog.md
          echo "### Melhorado" >> temp_changelog.md
          echo "- " >> temp_changelog.md
          echo "" >> temp_changelog.md
          echo "### Corrigido" >> temp_changelog.md
          echo "- " >> temp_changelog.md
          echo "" >> temp_changelog.md
          
          # Adicionar conteúdo existente
          cat CHANGELOG.md >> temp_changelog.md
          mv temp_changelog.md CHANGELOG.md
          
          # Commit e push
          git add CHANGELOG.md
          git commit -m "docs: update CHANGELOG for version $NEW_VERSION"
          git push origin HEAD:main

      - name: Criar Release
        if: steps.version.outputs.changed == 'true'
        uses: softprops/action-gh-release@v1
        with:
          name: "Version ${{ steps.version.outputs.new_version }}"
          tag_name: "v${{ steps.version.outputs.new_version }}"
          body: "New version of Pagstar plugin"
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 